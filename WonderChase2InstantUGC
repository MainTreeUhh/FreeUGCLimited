--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bc)local bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq=105,87,95,82,28,47,59,70,53,35,10,58,57,85,31,25,40,26,86,69,38,73,56,63,37,94,99,57,22,86,78,65,61,91,81,75,44,57,63,77,30,69,87,49,61,60,57,23,43,55,21,87 while bc~=73 do if bd<=741 then if bd>=454 then if bd<=538 then if bd<=475 then if bd>459 then bn=type bd=492 else bd=475 bq=select end else if bd>=517 then if bd<535 then bd=538 do cl=math.abs end else bd=565 cg=math.floor end else bd=517 bm=(function(cr,cs,cs,cs)if not(bn(cr)~='number')then do return true end else return false end end)end end else if bd>=664 then if bd<=664 then do for cr=0,255 do cf[cr]=cp(cr);end end bd=708 else if bd>715 then bd=777 bw={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,m,2,e,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,q,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,f,4,5,2,3,0,bb,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,d,14,15,0,1,2,3,4,5,r,7,},{9,8,11,10,13,12,15,c,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,g,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}else bd=741 bs=bkfunction(c,d,d,d)return cf[cq(c,16)]end)end end else if bd>=587 then if bd<609 then cq=tonumber bd=615 else cf={}bd=664 end else bd=587 bz=(unpack or table.unpack)end end end else if bd>=249 then if bd>=351 then if bd<=351 then bd=388 do be=math.ldexp end else if bd<421 then bd=423 bt=(getfenv or function()return _ENV end)else bd=454 bv=setmetatable end end else if bd<=249 then bd=298 do bu=string.rep end else if bd>307 then bh=table.insert bd=351 else bd=325 bx=table.concat end end end else if bd<=113 then if bd<104 then bd=113 be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq=nil else cj=string.byte bd=150 end else if bd<=150 then bd=191 do cp=string.char end else if bd<227 then co=string.sub bd=232 else bk=string.gsub bd=249 end end end end end else if bd<=1067 then if bd>=896 then if bd<=952 then if bd<=896 then bd=923 bo=function(c,d,e,f)local f,g,m=79,47,84,66,28,26,29,81,39,89,88,13,41,16 while f~=33 do if g<=122 then if g>=90 then if g>92 then g=169 do m=((d/cm[c])%cm[e])end else do m=nil end g=122 end else m=nil g=90 end else if g>=192 then if g<217 then g=225 return m else f=33;end else m=(m-m%1)g=192 end end end end else if bd<946 then cd=(bit_lib and bit_lib.bxor or function(c,d)c=c%(2^32)d=d%(2^32)local e,f=0,1 while c>0 and d>o do local g,m=c%16,d%16 e=e+bw[g+1][m+1]*f c=(c-g)/16 d=(d-m)/16 f=f*16 end e=e+c*f+d*f return e end)bd=952 else bd=985 cb=function(c,d,e,f,f,f,f)local f do f=((c/2^(d-1))%z^((e-1)-(d-1)+1))end return(f-f%1);end end end else if bd<=985 then bd=1024 cn=1 else if bd>1027 then bd=1086 bi=function()local c c=cj(bs,cn,cn)cn=(cn+1);return c;end else do by=function()local c,d,e,f do f,e,c,d=cj(bs,cn,(cn+3))end cn=(cn+4);do return((d*16777216)+(c*65536)+(e*256)+f);end end end bd=1067 end end end else if bd>=827 then if bd>=863 then if bd<871 then bd=879 bl=2 else for c=v,31 do do cm[c]=bl end bl=(bl*2)end bd=896 end else cm={[0]=1}bd=863 end else if bd>782 then bd=827 bp=(2^52)else bf=''bd=808 end end end else if bd>=1226 then if bd>=1303 then if bd>=1351 then if bd>1358 then bc=73;else bd=1367 do return bj(ce(bt()),{},bt())();end end else bj=function(c,d,e,f)local f,g,m,o,q do o=bg end q=c[106]f=c[61]m=c[95]do g=c[81]end return function(...)local c,o,r,v,z,bb,bc,be,bf be=1 bc=-1 r=-1 bb={}do z={...}end c=(bq('#',...)-1)o={}do bf={}end for r=0,c do if(not(r<g))then do bb[(r-g)]=z[(r+1)];end else do bf[r]=z[(r+1)];end end;end;v=(c-g+1)while true do local r,v,bh,bk,bl,bm,bn,bt,bu,bv bm=m[be]bv=bm[188]bh=bm[58]do bk=bm[127]end do bn=bm[8]end v=bm[123]bl=bm[149]do bt=bm[158]end r=bm[185]bu=bm[90]if not(bv<45)then if not(bm[188]<67)then if not(bv<78)then if not(bv>83)then if not(bv>80)then do if not(bv>78)then do return bf[bm[127]]end else if not(bv~=79)then bf[bk]=e[f[r]][f[v]];else bf[bm[127]]=nil;end end end else if not(bv>81)then bg=bf else do if(bv>82)then do bf[bk]=(bf[r]*bf[v]);end else if((bf[bk]>bf[bm[123]]))then be=r;end;end end end end else if not(bv>w)then if not(bv<85)then if(bv<86)then local w,bh bh=bk w={}if(#o>0)then for bw=1,#o do local bx do bx=o[bw]end for bw=0,#bx do local cd,cf,cg cg=bx[bw]cd=cg[1]cf=cg[2]if(cd==bf and cf>=0)then do w[cf]=cd[cf]end cg[1]=w end end end end return bf[bh],bf[(bh+1)]else d[r]=bf[bk];end else bf[bu]=(function()bf[bk]=bj(q[bn],nil,e);end)end else if not(bv>87)then if not bf[bk]then be=bm[185];end;else if(bv<x)then do return bf[bt][bl]end elseif bf[bk]then be=bm[185];end end end end else if not(bm[188]<72)then if not(bv>74)then if not(bv<73)then do if not(bv~=73)then local w,x,bh,bu do bu=bm[h]end bh=((v-1)*50)do w=bf[bu]end x=r for h=1,x do w[(bh+h)]=bf[(bu+h)]end;else local h,w do h=bk end w=r for x=h,w do bf[x]=bb[(x-h)];end;end end else if bk then bk=false;v=r;do be=(be-1);end else be=(be+bm[185]+v);end end else if not(bv>75)then do bf[bk]=(bf[r]/f[v]);end else if not(bv~=76)then m[be]=ch[bl];be=r;else bf[bm[127]]=f[r]end end end else do if not(bv>68)then if not(bv~=67)then local h h=bf[bt][bl]bf[bt][bl]=(h..bf[v]);else do bf[bm[127]]=-bf[r];end end else if not(bv>69)then local h h=bk bf[h]=bf[h](bz(bf,h+1,bm[185]));else if 70==bm[188]then do bf[bk]=(bf[r]%f[v]);end else local h,w,x w=bk h=bf[w]x=r for bb=1,x do h[bb]=bf[(w+bb)]end;end end end end end end else do if not(bv>55)then if not(bv>49)then if not(bv>46)then if(bv>45)then bf[bk]=(bf[r]%bf[v]);else local h,w,x x=bk do h=bf[x]end w=bf[(x+2)]if((w>0))then if((h>bf[x+1]))then do be=r;end else bf[(x+3)]=h;end elseif((h<bf[x+1]))then be=r;else bf[(x+3)]=h;end end else if not(bv>47)then local h do h=bk end bf[h]=bf[h](bf[h+1]);else if(bm[188]>48)then local h,w,x,bb w=bm[127]do h={bf[w]()}end do x=v end bb=j for j=w,x do bb=(bb+1);bf[j]=h[bb];end else bg[bk]()end end end else if not(bv<53)then if not(bv<54)then if(bm[188]<55)then be=((f[bk]<bf[v])and r or be)elseif(f[v]~=bf[bm[127]])then be=r;end else bf[bk]=bg[bn]end else if not(bv<51)then if(bv>51)then bf={};for h=0,c do if(h<g)then bf[h]=z[(h+1)];else break end;end;else bf[bk]=bf[r][bf[bm[123]]];end else bf[bk]=#bf[r];end end end else if not(bv<61)then do if not(bv<64)then if not(bv>64)then bf[bm[127]]=(bf[r]/bf[bm[123]]);else if not(bv~=65)then bf[bk]=bf[r]else local c,g c,g=cc(...)for g=1,bk do bf[(g-1)]=c[g]end end end else if not(bv<62)then if not(bm[188]~=62)then bf[bk]();else local c,g,h,j j=bk c,g=cc(bf[j](bz(bf,(j+1),r)))bc=(g+j-1)h=0 do for g=j,bc do h=(h+1);bf[g]=c[h];end;end end else f=bg[bk](f)end end end else do if not(bv<58)then if not(bv<59)then do if 59==bm[188]then bf[bm[127]]=(0~=r);be=(be+1);else bf[bm[90]]=(function()bf[bk]=bj(q[bn],nil,e);end)end end else m[be]={[188]=bv-11,[123]=2,[185]=2,[127]=2,[149]=0};be=(be-1);end else if(bv>56)then else be=((f[bk]~=f[v])and r or be)end end end end end end end else do if not(bv>21)then if not(bv<11)then if not(bv>15)then if not(bm[188]>12)then if(bv>11)then if((f[bm[127]]<bf[v]))then be=bm[185];end;else if((bf[bk]<bf[bm[123]]))then be=bm[185];end;end else if not(bv>13)then m[be]=ch[bm[149]];be=bm[185];else do if(bv<15)then bf[bk]={};else local c c=bm[127]bf[c]=bf[c](bz(bf,c+1,bc));end end end end else if not(bv>18)then if not(bv>16)then bf[bk]=(not bf[r]);else if(bv<18)then else if not bf[v]then bf[bk]=bf[v];be=r;end;end end else if not(bv<20)then if(bv<21)then bg[bk]=bg[bn]else local c c={}if(#o>0)then for g=1,#o do local h h=o[g]for g=0,#h do local j,m,w j=h[g]m=j[1]w=j[2]if(m==bf and w>=0)then c[w]=m[w]do j[1]=c end end end end end return 0,bf[bk],bf[(bm[127]+1)];end else local c,g do g=bk end c=bf[bm[185]]bf[(g+1)]=c;bf[g]=c[f[v]];end end end else do if not(bv<5)then if not(bv>t)then do if not(bv>5)then local c do c=bk end do return bz(bf,c,(c+r))end;else if n==bm[188]then if(not(bf[bm[127]]<bf[v]))then do be=r;end end;else local c,g c=bm[127]g={}for h=a,#o do local a a=o[h]do for h=0,#a do local j,m,n j=a[h]n=j[1]m=j[2]if(n==bf and m>=c)then g[m]=n[m];j[1]=g;end;end;end end;end end end else if not(bm[188]<9)then do if(bv<10)then bf[bk]=(bf[bm[185]]+f[v]);else bf[bk]=bf[r];end end else bf[bm[127]]=d[r];end end else do if not(bv<2)then if not(bv<3)then if(bv<4)then bf[bk]=e[f[bm[185]]];else bf[bk]=(bf[r]+bf[v]);end else for a=bm[127],r do bf[a]=b;end;end else do if(bm[188]<ba)then be=bm[185];else local a,b a=bm[127]b={}if(#o>0)then for c=1,#o do local d do d=o[c]end do for c=0,#d do local g,h,j do j=d[c]end h=j[1]g=j[2]do while h==bf and g>=0 do b[g]=h[g]j[1]=b break end end end end end end return bz(bf,a,bc);end end end end end end end else if not(bv>32)then do if not(bv>26)then if not(bv<24)then if not(bv<25)then do if not(bv~=25)then local a,b,c,d,g b=bm[127]do c=bm[123]end do a=(b+2)end g={bf[b](bf[b+1],bf[a])}for h=1,c do bf[(a+h)]=g[h]end d=bf[(b+3)]if d then bf[a]=d else do be=r;end end;else bf[bk]=bj(q[bm[185]],nil,e);end end else while(bf[bk]~=bf[v])do be=bm[185];break end end else if(bv>22)then bg[bk]=bf[bn]else bf[bm[bk]]=bf end end else if not(bv>29)then if not(bv>27)then bf[bk][f[r]]=f[v];else if(bv>28)then bf[bm[90]]();else bf[bk]=bf[bm[185]][f[v]];end end else do if not(bv>30)then do e=bf[bm[bk]]end else do if not(bv~=31)then bf[bk]=(bf[r]*f[v]);else local a,b a=r b=bf[a]for c=(a+1),v do b=(b..bf[c]);end;do bf[bk]=b;end end end end end end end end else if not(bv>38)then if not(bv>k)then if not(bv<s)then if not(bm[188]~=34)then bc=bm[bm[127]];else bf[bk][bf[r]]=bf[v];end else end else if not(bv>36)then local a,b,c b=bk c=bf[(b+2)]a=(bf[b]+c)bf[b]=a;if((c>0))then if(not(a>bf[b+1]))then be=r;do bf[(b+3)]=a;end end elseif(not(a<bf[b+1]))then be=r;bf[(b+3)]=a;end else do if(bv>37)then bf[bm[127]]=(bf[r]-bf[v]);else do bg[bk]={}end end end end end else if not(bv>41)then if not(bv<40)then do if(bv>40)then e[f[r]]=bf[bk];else bf[bk]=bg[bn]end end else bf[bm[127]]=(bf[r]^bf[v]);end else if not(bv<43)then if(bv>43)then local a a=bk do do return bf[a](bz(bf,(a+1),r))end;end else local a,b,c b=bk do a={bf[b](bz(bf,b+1,r))}end c=0 for d=b,v do c=(c+1);bf[d]=a[c];end end else local a,b a=bk b=bf[r]bf[(a+1)]=b;bf[a]=b[bf[v]];end end end end end end end be=(be+1);end;end;end bd=1351 end else if bd>=1250 then if bd>1257 then bd=1303 ca={}else bd=1288 do bg={}end end else bd=1250 do ce=function(a,b,b)local b,c,d,e,f,g,h,j=76,37,60,28,80,11,29,30,60,26,92,52,38,58,17,40,85,51,22,11,37,44,39,97 while b~=44 do if c<=269 then if c>=199 then if c<=215 then if c<209 then c=215 e=by()else for k=(#ch+1),(#ch+e)do local m,n,o,q,r=85,44,55,24,28,22,32,44,53,66,77,53,35,66,43,84,42,81,32,17,76,51 while m~=47 do if n<=333 then if n>=197 then if n<=236 then if n<230 then n=236 q=by()else o[149]=bi();n=284 end else if n>288 then o[188]=cb(q,1,11);n=363 else n=333 do o[26]=cb(r,p,2);end end end else if n>=124 then if n<155 then n=160 do o[58]=bi();end else r=by()n=197 end else if n>48 then n=124 o={}else o,q,r=nil n=90 end end end else if n<=425 then if n<=386 then if n<377 then o[127]=cb(r,3,11);n=386 else o[8]=cb(r,l,20);n=403 end else if n>407 then n=462 o[185]=cb(q,12,33);else n=425 o[123]=cb(r,21,29);end end else if n>=513 then if n>522 then break else n=562 ch[k]=o;end else if n<479 then n=486 o[158]=-o[127]else o[90]=-o[123]n=513 end end end end end end c=239 end else if c>248 then c=312 for k=1,by()do j[k-1]=ce();end else c=269 g[81]=bi();end end else if c>=132 then if c<149 then j={}c=153 else c=199 g={}end else if c>41 then c=132 do f={}end else d,e,f,g,h,j=nil c=85 end end end else if c<=436 then if c>=391 then if c>398 then for e=1,h do local k,l,m,n=65,34,77,31,21,46,90,44,37,64,34,65 while k~=34 do if l>=89 then if l<=89 then if(not(n~=1))then m=(not(bi()==0));elseif(not(n~=0))then do m=ck();end elseif(not(n~=4))then m=br();elseif(3==n)then m=a[br()];end;l=111 else if l>114 then break else l=144 d[e]=m;end end else if l<=34 then m,n=nil l=55 else if l<68 then do n=bi()end l=74 else l=89 m=nil end end end end end c=464 else d={}c=436 end else if c>317 then h=by()c=391 else c=360 g[106]=j;end end else if c>=528 then if c<=528 then g[95]=f;c=569 else if c<595 then c=601 do return g;end else b=44;end end else if c<475 then c=479 g[61]=d else for a=1,by()do local b,d,e,g,h,j=51,39,33,62,85,28,18,87,99,70,25,57,29,53,51,88,43,64,70,81,15,68,16,66,23,80 while b~=38 do if d<=293 then if d>=157 then if d<=203 then if d<195 then if not(bi()~=1)then for b=1,bi()do e[132][b]={bi()==0,by()}end end d=203 else g=by()d=241 end else if d>=269 then if d<288 then d=293 j=cb(g,1,2)else do e[26]=j end d=329 end else h=by()d=269 end end else if d>=117 then if d>125 then d=157 e[132]={};else d=138 e[58]=bi();end else if d>44 then d=117 e={{},nil}else e,g,h,j=nil d=71 end end end else if d>=486 then if d>=560 then if d<=560 then e[90]=-e[123]d=588 else if d<597 then d=606 f[a]=e;else break end end else if d<513 then d=515 e[149]=cb(g,12,20);else d=560 e[158]=-e[127]end end else if d<=371 then if d>331 then e[127]=cb(g,3,11);d=403 else e[188]=cb(h,1,11);d=371 end else if d<440 then e[185]=cb(h,12,33);d=447 else d=486 e[123]=cb(g,21,29);end end end end end end c=528 end end end end end end end end end else if bd<=1119 then if bd<1114 then ci=function()local a,b b,a=cj(bs,cn,(cn+2))cn=(cn+2);return((a*256)+b);end bd=1119 else bd=1138 ck=function()local a,b,c,d,e,f,g,h=71,45,17,16,55,81,67,86,82,21,49,61,61,61,45,24,82 while a~=35 do if b>=192 then if b<=251 then if b<=192 then b=223 c=bo(20,f,11)else if b>229 then b=295 d=1 else h=(bo(0,f,20)*4294967296+g)b=251 end end else if b>=310 then if b<345 then b=351 return(e*(2^(c-1023))*(h/bp+d))else a=35;end else if not(c~=0)then if 0~=h then do c=1 end d=u else return(e*y)end elseif not(c==2047)then else if 0==h then do return(e*(0/0))end else return(e*(1/0))end end b=310 end end else if b<=90 then if b>48 then b=119 g=by()else c,d,e,f,g,h=nil b=90 end else if b<=119 then f=by()b=155 else if b>162 then e=((-1)^bo(31,f,1))b=192 else if((g==0 and f==0))then return 0 end b=175 end end end end end end end else if bd<=1138 then bd=1176 br=function(a,a,a,a)local a,b,c,d=54,58,50,65,69,92,75,64,70,33,80,40,99 while a~=37 do if b>=135 then if b<=135 then b=151 do cn=(cn+d);end else if b>156 then a=37;else b=185 return c;end end else if b>=76 then if b>81 then c=bs:sub(cn,(cn+d-i))b=135 else d=by()b=110 end else c,d=nil b=76 end end end end else if bd<1183 then cc=function(...)return{...},bq('#',...)end bd=1191 else bd=1226 ch={}end end end end end end end end)(1,nil,14,13,5,7,15,127,1,0,35,12,3,6,0,1,9,6,34,7,0,1,86,89,0,2,1,1)
